name: 'Integration Test : Community'

on:
  push:
    branches:
    - 'main'
    - 'release/*'
  pull_request:
    branches:
    - '*'

jobs:
  test:
    strategy:
      matrix:
        kong_version:
        - '2.0.5'
        - '2.1.4'
        - '2.2.2'
        - '2.3.3'
        - '2.4.0'
        - '2.5.1'
        - '2.6.0'
        - '2.7.0'
        - '2.8.0'
        - '3.0.0'
    env:
      KONG_VERSION: ${{ matrix.kong_version }}
      KONG_ENTERPRISE_REPO_USERNAME: ${{ secrets.KONG_ENTERPRISE_REPO_USERNAME }}
      KONG_ENTERPRISE_REPO_PASSSWORD: ${{ secrets.KONG_ENTERPRISE_REPO_PASSSWORD }}
      KONG_ANONYMOUS_REPORTS: "off"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.6-alpine
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.16'
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: actions/cache@v3.0.8
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Setup Postgres
        run: |
          psql -c 'create database kong;' -U postgres -h 127.0.0.1 -p 5432
          psql -c 'create user kong;' -U postgres -h 127.0.0.1 -p 5432
          psql -c 'GRANT ALL PRIVILEGES ON DATABASE "kong" to kong;' -U postgres -h 127.0.0.1 -p 5432
      - name: Setup Kong
        run: make setup-kong
      - name: Run tests
        run: make test-coverage
      - name: Upload Code Coverage
        uses: codecov/codecov-action@v3.1.1
        with:
          name: codecov-${{ matrix.kong_version }}
          flags: ${{ matrix.kong_version }},integration,community
          fail_ci_if_error: true
