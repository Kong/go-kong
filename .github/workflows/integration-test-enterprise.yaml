name: 'Integration Test : Enterprise'

concurrency:
  # Run only for most recent commit in PRs but for all tags and commits on main
  # Ref: https://docs.github.com/en/actions/using-jobs/using-concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

on:
  push:
    branches:
    - 'main'
    - 'release/*'
  pull_request:
    branches:
    - '*'

jobs:
  secret-available:
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT || 10) }}
    outputs:
      ok: ${{ steps.exists.outputs.ok }}
    runs-on: ubuntu-latest
    env:
      PULP_PASSWORD: ${{ secrets.PULP_PASSWORD }}
    steps:
    - name: check for secret availability
      id: exists
      run: |
        if [ ! -z "$PULP_PASSWORD" ]; then
          echo "ok=true" >> $GITHUB_OUTPUT
        fi

  # NOTE: This should be done in a workflow which runs on schedule and updates
  # the supported versions in a file in this repository.
  # This would save unexpected changes in CI matrix where an unrelated change
  # in the supported versions would block a PR from merging.
  # This is still better than maintaining the hardcoded matrix of versions in the workflow itself.
  supported-kong-versions:
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT || 10) }}
    outputs:
      result: ${{ steps.result.outputs.versions }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - id: result
      run: |
        {
          echo 'versions<<EOF'
          make kong.supported-versions
          echo EOF
        } >> "$GITHUB_OUTPUT"
    - run: |
        echo "Kong versions: ${{ steps.result.outputs.versions }}"

  test-enterprise:
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT || 10) }}
    continue-on-error: true
    needs:
    - secret-available
    - supported-kong-versions
    if: needs.secret-available.outputs.ok
    strategy:
      matrix:
        # Skip explicitly to avoid spawning many unnecessary jobs,
        # since expressions router is supported for Kong >= 3.0.
        # Option router_flavor is ignored for Kong < 3.0.
        exclude:
          - kong_version: '2.8'
            router_flavor: 'expressions'
        router_flavor:
          - 'traditional_compatible'
          - 'expressions'
        kong_version: ${{ fromJSON(needs.supported-kong-versions.outputs.result) }}
    env:
      KONG_ROUTER_FLAVOR: ${{ matrix.router_flavor }}
      KONG_IMAGE_TAG: ${{ matrix.kong_version }}
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_ADMIN_TOKEN: kong
    runs-on: ubuntu-latest
    steps:
      # This will set KONG_LINCENSE_DATA environment variable.
      # NOTE:
      # This could be (?) made a shared step but for some reason it's impossible
      # to override:
      # Warning: Skip output 'license' since it may contain secret.
      # on Github Actions when setting a job output.
      - uses: Kong/kong-license@c4decf08584f84ff8fe8e7cd3c463e0192f6111b
        id: license_step
        with:
          password: ${{ secrets.PULP_PASSWORD }}
          op-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Setup Kong
        run: make setup-kong-ee
      - name: Run tests
        run: make test-coverage-enterprise
      - name: Upload Code Coverage
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        continue-on-error: true
        with:
          name: codecov-${{ matrix.kong_version }}
          flags: ${{ matrix.kong_version }},integration,enterprise
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  test-enterprise-passed:
    timeout-minutes: ${{ fromJSON(vars.GHA_DEFAULT_TIMEOUT || 10) }}
    runs-on: ubuntu-latest
    needs: test-enterprise
    if: always()
    steps:
    - name: Set workflow outcome
      if: needs.test-enterprise.result == 'failure' || needs.test-enterprise.result == 'cancelled'
      run: ${{ false }}
